buildscript {
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'maven-publish'
}
apply plugin: "com.github.johnrengelman.shadow"

repositories {
    jcenter()
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "polychat-fabric116"
version = "2.0.2"
group = project.maven_group

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    embed files('../../core/message-library/build/libs/message-library.jar')
    embed files('../../core/network-library/build/libs/network-library.jar')
    embed files('../../core/common/build/libs/common.jar')
    embed files('../client-base/build/libs/client-base.jar')
    embed "com.google.protobuf:protobuf-java:3.13.+"
    embed "org.yaml:snakeyaml:1.+"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes([
                "Specification-Title"     : "polychat",
                "Specification-Vendor"    : "moddedminecraftclub",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "moddedminecraftclub",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
